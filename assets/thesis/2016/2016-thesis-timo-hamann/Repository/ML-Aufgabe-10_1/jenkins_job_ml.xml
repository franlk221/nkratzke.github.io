<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.model.Item.Read:anonymous</permission>
    </hudson.security.AuthorizationMatrixProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.4">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://harry7e@bitbucket.org/harry7e/automatisierte-auswertung-von-programmier-praktika.git</url>
        <credentialsId>bitbucket</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.SparseCheckoutPaths>
        <sparseCheckoutPaths>
          <hudson.plugins.git.extensions.impl.SparseCheckoutPath>
            <path>ML-Aufgabe-10_1</path>
          </hudson.plugins.git.extensions.impl.SparseCheckoutPath>
        </sparseCheckoutPaths>
      </hudson.plugins.git.extensions.impl.SparseCheckoutPaths>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>H/15 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Ant plugin="ant@1.2">
      <targets>all</targets>
      <antName>ant_1.9.7</antName>
      <buildFile>ML-Aufgabe-10_1/build.xml</buildFile>
    </hudson.tasks.Ant>
  </builders>
  <publishers>
	<org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.3.1">
		<script plugin="script-security@1.20">
			<script>
import java.util.regex.Pattern;
import java.util.regex.Matcher;

Pattern pattern = Pattern.compile(&quot;.*Cyclomatic Complexity is (\\d+).*&quot;);
int maxAllowed = 5;

if(!hudson.model.Result.FAILURE.equals(manager.build.getResult())){
 int maxFound = 0;
 manager.build.logFile.eachLine { line -&gt;
  Matcher matcher = pattern.matcher(line)
  if(matcher.matches()) {
   maxFound = Math.max(maxFound, Integer.parseInt(matcher.group(1)));
  }
 }
 String addition = (maxFound &gt; 0) ? String.valueOf(maxFound) : &quot;&lt;=&quot; + maxAllowed;
 manager.build.setDescription(&quot;Zyklomatische Komplexit&#228;t: &quot; + addition);
}
			</script>
			<sandbox>false</sandbox>
		</script>
		<behavior>0</behavior>
		<runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.13">
      <testResults>ML-Aufgabe-10_1/report/tests/*.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>false</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.plugins.jacoco.JacocoPublisher plugin="jacoco@2.0.1">
      <execPattern>ML-Aufgabe-10_1/report/**.exec</execPattern>
      <classPattern>ML-Aufgabe-10_1/bin</classPattern>
      <sourcePattern></sourcePattern>
      <inclusionPattern>**/*.class</inclusionPattern>
      <exclusionPattern>**/*Test*.class</exclusionPattern>
      <minimumInstructionCoverage>0</minimumInstructionCoverage>
      <minimumBranchCoverage>0</minimumBranchCoverage>
      <minimumComplexityCoverage>0</minimumComplexityCoverage>
      <minimumLineCoverage>0</minimumLineCoverage>
      <minimumMethodCoverage>0</minimumMethodCoverage>
      <minimumClassCoverage>0</minimumClassCoverage>
      <maximumInstructionCoverage>0</maximumInstructionCoverage>
      <maximumBranchCoverage>0</maximumBranchCoverage>
      <maximumComplexityCoverage>0</maximumComplexityCoverage>
      <maximumLineCoverage>0</maximumLineCoverage>
      <maximumMethodCoverage>0</maximumMethodCoverage>
      <maximumClassCoverage>0</maximumClassCoverage>
      <changeBuildStatus>false</changeBuildStatus>
    </hudson.plugins.jacoco.JacocoPublisher>
    <hudson.plugins.checkstyle.CheckStylePublisher plugin="checkstyle@3.46">
      <healthy></healthy>
      <unHealthy></unHealthy>
      <thresholdLimit>low</thresholdLimit>
      <pluginName>[CHECKSTYLE] </pluginName>
      <defaultEncoding></defaultEncoding>
      <canRunOnFailed>false</canRunOnFailed>
      <usePreviousBuildAsReference>false</usePreviousBuildAsReference>
      <useStableBuildAsReference>false</useStableBuildAsReference>
      <useDeltaValues>false</useDeltaValues>
      <thresholds plugin="analysis-core@1.78">
        <unstableTotalAll></unstableTotalAll>
        <unstableTotalHigh></unstableTotalHigh>
        <unstableTotalNormal></unstableTotalNormal>
        <unstableTotalLow></unstableTotalLow>
        <unstableNewAll></unstableNewAll>
        <unstableNewHigh></unstableNewHigh>
        <unstableNewNormal></unstableNewNormal>
        <unstableNewLow></unstableNewLow>
        <failedTotalAll></failedTotalAll>
        <failedTotalHigh></failedTotalHigh>
        <failedTotalNormal></failedTotalNormal>
        <failedTotalLow></failedTotalLow>
        <failedNewAll></failedNewAll>
        <failedNewHigh></failedNewHigh>
        <failedNewNormal></failedNewNormal>
        <failedNewLow></failedNewLow>
      </thresholds>
      <shouldDetectModules>false</shouldDetectModules>
      <dontComputeNew>true</dontComputeNew>
      <doNotResolveRelativePaths>false</doNotResolveRelativePaths>
      <pattern>ML-Aufgabe-10_1/report/checkstyle.xml</pattern>
    </hudson.plugins.checkstyle.CheckStylePublisher>
  </publishers>
  <buildWrappers/>
</project>