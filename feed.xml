<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-10-23T16:38:32+02:00</updated><id>http://localhost:4000/</id><title type="html">nkode.io</title><subtitle>A blog about programming, data, cloud computing, and web scale systems</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2017/10/19/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2017-10-19T20:00:35+02:00</published><updated>2017-10-19T20:00:35+02:00</updated><id>http://localhost:4000/jekyll/update/2017/10/19/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/10/19/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Programming I (Winter 2017)</title><link href="http://localhost:4000/lecture/2017/09/21/lecture-programming-i.html" rel="alternate" type="text/html" title="Programming I (Winter 2017)" /><published>2017-09-21T00:00:00+02:00</published><updated>2017-09-21T00:00:00+02:00</updated><id>http://localhost:4000/lecture/2017/09/21/lecture-programming-i</id><content type="html" xml:base="http://localhost:4000/lecture/2017/09/21/lecture-programming-i.html">&lt;p&gt;The course &lt;strong&gt;Programming I&lt;/strong&gt; is about fundamentals of programming
for freshman students.&lt;/p&gt;

&lt;p&gt;This course covers aspects like primitive and reference data types, operators, expressions,
control flow, routine (method) definitions, I/O programming,
recursive and object oriented programming.
JAVA is used as teaching language, nevertheless the principles are applicable to every (imperative or class based object oriented) programming language.&lt;/p&gt;

&lt;p&gt;The course is given for computer science students at Lübeck University of Applied Sciences.&lt;/p&gt;

&lt;p&gt;Lecture will cover following aspects:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Fundamental concepts&lt;/strong&gt; of programming including &lt;strong&gt;programming paradigms&lt;/strong&gt; and &lt;strong&gt;runtime models&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Variables&lt;/strong&gt;, &lt;strong&gt;data types&lt;/strong&gt;, &lt;strong&gt;operators&lt;/strong&gt; and &lt;strong&gt;expressions&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Control flow&lt;/strong&gt; and &lt;strong&gt;routines&lt;/strong&gt; (functions, procedures, methods)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Reference data types&lt;/strong&gt; and &lt;strong&gt;collections&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;(Stream based) &lt;strong&gt;I/O programming&lt;/strong&gt; and &lt;strong&gt;serialization&lt;/strong&gt; of objects&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Recursive programming&lt;/strong&gt; and &lt;strong&gt;recursive datastructures&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Functional programming&lt;/strong&gt; using &lt;strong&gt;lambda functions&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Exception handling&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Introduction to &lt;strong&gt;object oriented programming&lt;/strong&gt; and &lt;strong&gt;UML&lt;/strong&gt; introducing fundamental concepts like &lt;strong&gt;abstraction&lt;/strong&gt;, &lt;strong&gt;encapsulation&lt;/strong&gt;, &lt;strong&gt;polymorphism&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;course-material-german-only&quot;&gt;Course Material (german only)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Lecture Unit 1: &lt;a href=&quot;/assets/ws2017/progI/Unit_01.pdf&quot;&gt;Core concepts of programming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Lecture Unit 2: &lt;a href=&quot;/assets/ws2017/progI/Unit_02.pdf&quot;&gt;Fundamentals of imperative programming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Lecture Unit 3: &lt;a href=&quot;/assets/ws2017/progI/Unit_03.pdf&quot;&gt;Reference data types and collections&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Lecture Unit 4: &lt;a href=&quot;/assets/ws2017/progI/Unit_04.pdf&quot;&gt;I/O programming, serialization&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Lecture Unit 5: &lt;a href=&quot;/assets/ws2017/progI/Unit_05.pdf&quot;&gt;Recursive and functional programming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Lecture Unit 6: &lt;a href=&quot;/assets/ws2017/progI/Unit_06.pdf&quot;&gt;OO and UML&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Exercises: &lt;a href=&quot;/assets/ws2017/progI/excercises.pdf&quot;&gt;Catalogue of excercises&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Nane Kratzke</name></author><category term="lecture" /><category term="java" /><category term="programming" /><summary type="html"></summary></entry><entry><title type="html">Introduction to Programming (Winter 2017)</title><link href="http://localhost:4000/lecture/2017/09/21/introduction-to-prgramming.html" rel="alternate" type="text/html" title="Introduction to Programming (Winter 2017)" /><published>2017-09-21T00:00:00+02:00</published><updated>2017-09-21T00:00:00+02:00</updated><id>http://localhost:4000/lecture/2017/09/21/introduction-to-prgramming</id><content type="html" xml:base="http://localhost:4000/lecture/2017/09/21/introduction-to-prgramming.html">&lt;p&gt;The lecture provides an introduction into programming
for freshman students.&lt;/p&gt;

&lt;p&gt;The lecture covers basic aspects like primitive and reference data types, operators, expressions,
control flow, routine (method) definitions
recursive and object oriented programming.
JAVA is used as teaching language, nevertheless the principles are applicable to every (imperative or class based object oriented) programming language.&lt;/p&gt;

&lt;p&gt;The lecture is given for &lt;em&gt;information technology and design&lt;/em&gt; students at Lübeck University of Applied Sciences.&lt;/p&gt;

&lt;p&gt;Lecture will cover following aspects:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Fundamental concepts&lt;/strong&gt; of programming including &lt;strong&gt;programming paradigms&lt;/strong&gt; and &lt;strong&gt;runtime models&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Variables&lt;/strong&gt;, &lt;strong&gt;data types&lt;/strong&gt;, &lt;strong&gt;operators&lt;/strong&gt; and &lt;strong&gt;expressions&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Control flow&lt;/strong&gt; and &lt;strong&gt;routines&lt;/strong&gt; (functions, procedures, methods)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Reference data types&lt;/strong&gt; and &lt;strong&gt;collections&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;(Stream based) &lt;strong&gt;I/O programming&lt;/strong&gt; and &lt;strong&gt;serialization&lt;/strong&gt; of objects&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Recursive programming&lt;/strong&gt; and &lt;strong&gt;datastructures&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;course-material-german-only&quot;&gt;Course Material (german only)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Lecture Unit 1: &lt;a href=&quot;/assets/ws2017/progI/Unit_01.pdf&quot;&gt;Core concepts of programming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Lecture Unit 2: &lt;a href=&quot;/assets/ws2017/progI/Unit_02.pdf&quot;&gt;Fundamentals of imperative programming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Lecture Unit 3: &lt;a href=&quot;/assets/ws2017/progI/Unit_03.pdf&quot;&gt;Reference data types and collections&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Lecture Unit 4: &lt;a href=&quot;/assets/ws2017/progI/Unit_04.pdf&quot;&gt;I/O programming, serialization&lt;/a&gt; (skipped, just for self study)&lt;/li&gt;
  &lt;li&gt;Lecture Unit 5: &lt;a href=&quot;/assets/ws2017/progI/Unit_05.pdf&quot;&gt;Recursive programming&lt;/a&gt; (functional programming skipped, just for self study)&lt;/li&gt;
  &lt;li&gt;Exercises: &lt;a href=&quot;/assets/ws2017/progI/excercises.pdf&quot;&gt;Catalogue of excercises&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Youtube Playlist: &lt;a href=&quot;https://www.youtube.com/playlist?list=PL06-G-mnBYTJ2QffB3jgjZH-1TVIwMDr8&quot;&gt;Excercises of WS2015/16 explained&lt;/a&gt; (thanks to &lt;strong&gt;Marco Torge Gabrecht&lt;/strong&gt; for providing this tremendous work)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Nane Kratzke</name></author><category term="lecture" /><category term="java" /><category term="programming" /><summary type="html"></summary></entry><entry><title type="html">A List of Serverless Frameworks</title><link href="http://localhost:4000/2017/09/12/serverless-frameworks.html" rel="alternate" type="text/html" title="A List of Serverless Frameworks" /><published>2017-09-12T00:00:00+02:00</published><updated>2017-09-12T00:00:00+02:00</updated><id>http://localhost:4000/2017/09/12/serverless-frameworks</id><content type="html" xml:base="http://localhost:4000/2017/09/12/serverless-frameworks.html">&lt;p&gt;Serverless computing is a cloud computing execution model in which the the allocation of machine resources is dynamically managed. There is a good blog bost by Mike Roberts on &lt;a href=&quot;https://martinfowler.com/articles/serverless.html&quot;&gt;serverless architectures&lt;/a&gt; for the interested reader. “Serverless computing” is misleading to some degree. Obviously servers are still needed, but the term “serverless” is used because the server management and capacity planning decisions are completely hidden from the developer or operator. Serverless code can be used in conjunction with code deployed in more traditional styles, such as microservices. However, applications can be written to be purely serverless as well.&lt;/p&gt;

&lt;p&gt;There are very well curated link lists dealing with serverless computing in general like &lt;a href=&quot;https://github.com/anaibol/awesome-serverless&quot;&gt;Awesome serverless&lt;/a&gt;. However, this blog post would like to concentrate only on the frameworks. The main intent is to curate a list of open source serverless frameworks over time.&lt;/p&gt;

&lt;h3 id=&quot;public-commercial-serverless-services&quot;&gt;Public (commercial) serverless services&lt;/h3&gt;

&lt;p&gt;Most public cloud service providers offer compute runtimes, also known as function as a service (FaaS) platforms. Here are some well known type representatives.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/appengine/&quot;&gt;Google App Engine&lt;/a&gt; (one of the first commercially successfull solutions, however App Engine relies on a custom Python framework.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/de/lambda/&quot;&gt;AWS Lambda&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/functions/&quot;&gt;Google Cloud Functions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/services/functions/&quot;&gt;Azure Functions&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;open-source-serverless-platforms&quot;&gt;Open (source) serverless platforms&lt;/h3&gt;

&lt;p&gt;All of the mentioned commercial serverless computing models are prone to create vendor lock-in (to some degree). Therefore, open source serverless frameworks might be an alternative with the downside that the infrastructure must be operated. Obviously these frameworks need platforms or infrastructures to be executed on.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://fnproject.io/&quot;&gt;Fn project&lt;/a&gt; - The Fn project is a container native serverless platform. It supports every programming language. (added 3. Oct 2017) &lt;span class=&quot;date&quot;&gt;New&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://openwhisk.incubator.apache.org/&quot;&gt;OpenWhisk&lt;/a&gt; by Apache includes native support for Node.js, Python, Java, and Swift, and supports other languages and runtime via Docker containers. (added 12. Sep 2017) &lt;span class=&quot;date&quot;&gt;New&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://kubeless.io/&quot;&gt;Kubeless&lt;/a&gt;, a serverless framework for Kubernetes. (added 12. Sep 2017) &lt;span class=&quot;date&quot;&gt;New&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://fission.io/&quot;&gt;Fission&lt;/a&gt;, another serverless framework for Kubernetes, supporting Python, NodeJS, Go, C#, and PHP. (added 12. Sep 2017) &lt;span class=&quot;date&quot;&gt;New&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://funktion.fabric8.io/&quot;&gt;Funktion&lt;/a&gt;, an event-based lambda programming environment for Kubernetes. (added 12. Sep 2017) &lt;span class=&quot;date&quot;&gt;New&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/alexellis/faas&quot;&gt;Functions as a Service (OpenFaaS)&lt;/a&gt; - a serverless framework for Docker &amp;amp; Kubernetes (added 12. Sep 2017) &lt;span class=&quot;date&quot;&gt;New&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/iron-io/functions&quot;&gt;IronFunctions&lt;/a&gt; - the serverless microservices platform (added 12. Sep 2017) &lt;span class=&quot;date&quot;&gt;New&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-function&quot;&gt;SpringCloud Functions&lt;/a&gt; - the serverless approach of Spring (added 12. Sep 2017) &lt;span class=&quot;date&quot;&gt;New&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This list is likely not complete. If you know further serverless platforms do not hesitate to contact me.&lt;/p&gt;

&lt;h3 id=&quot;provider-agnostic-serverless-frameworks&quot;&gt;Provider agnostic serverless frameworks&lt;/h3&gt;

&lt;p&gt;While serverless platforms need infrastructures to be executed on, provider agnostic serverless frameworks provide a provider and platform agnostic way to define and deploy serverless code on various serverless platforms or commercial serverless services. This is an option to avoid (or reduce) vendor lock-in without the necessity to operate an own infrastructure.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://serverless.com/&quot;&gt;Serverless Framework&lt;/a&gt; (added 13. Sep 2017) &lt;span class=&quot;date&quot;&gt;New&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://squeezer.io&quot;&gt;Squeezer Framework&lt;/a&gt; (added 13. Sep 2017) &lt;span class=&quot;date&quot;&gt;New&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This list is likely not complete. If you know further provider agnostic serverless frameworks do not hesitate to contact me.&lt;/p&gt;</content><author><name>Nane Kratzke,</name></author><category term="blog" /><category term="cloud" /><category term="serverless" /><category term="frameworks" /><category term="programming" /><category term="game" /><summary type="html">Serverless computing is a cloud computing execution model in which the the allocation of machine resources is dynamically managed. There is a good blog bost by Mike Roberts on serverless architectures for the interested reader. “Serverless computing” is misleading to some degree. Obviously servers are still needed, but the term “serverless” is used because the server management and capacity planning decisions are completely hidden from the developer or operator. Serverless code can be used in conjunction with code deployed in more traditional styles, such as microservices. However, applications can be written to be purely serverless as well.</summary></entry><entry><title type="html">And the winner is … Dynamite Man</title><link href="http://localhost:4000/2017/07/24/And-the-winner-is-Dynamite-Man.html" rel="alternate" type="text/html" title="And the winner is ... Dynamite Man" /><published>2017-07-24T00:00:00+02:00</published><updated>2017-07-24T00:00:00+02:00</updated><id>http://localhost:4000/2017/07/24/And-the-winner-is-Dynamite-Man</id><content type="html" xml:base="http://localhost:4000/2017/07/24/And-the-winner-is-Dynamite-Man.html">&lt;p&gt;One more time we had some fun this summer semester &lt;a href=&quot;/lecture/2017/06/15/lecture-webtech.html&quot;&gt;webtechnology course&lt;/a&gt;. 
My students implemented several classical games as &lt;a href=&quot;https://www.dartlang.org/&quot;&gt;Dart&lt;/a&gt; single page HTML ‘apps’.&lt;/p&gt;

&lt;p&gt;Three games (of 18 game submissions) entered the &lt;a href=&quot;/assets/webtech-hall-of-fame/index.html&quot;&gt;Webtech Hall of Fame&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;#1: &lt;a href=&quot;/assets/ss2017/webtech/games/team-04-dynamite-man/web/index.html&quot;&gt;Dynamite Man&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;#2: &lt;a href=&quot;/assets/ss2017/webtech/games/team-07-ninja-swap/web/index.html&quot;&gt;Ninja Swap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;#3: &lt;a href=&quot;/assets/ss2017/webtech/games/team-06-star-speeder/web/index.html&quot;&gt;Star Speeder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Congratulations.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;2048px&quot; src=&quot;/assets/webtech-hall-of-fame/index.html&quot;&gt;Uupps, your browser does not support iframes.&lt;iframe&gt;
&lt;/iframe&gt;&lt;/iframe&gt;</content><author><name>Nane Kratzke,</name></author><category term="blog" /><summary type="html">One more time we had some fun this summer semester webtechnology course. My students implemented several classical games as Dart single page HTML ‘apps’.</summary></entry><entry><title type="html">Web Technologies (Summer 2017)</title><link href="http://localhost:4000/lecture/2017/06/15/lecture-webtech.html" rel="alternate" type="text/html" title="Web Technologies (Summer 2017)" /><published>2017-06-15T00:00:00+02:00</published><updated>2017-06-15T00:00:00+02:00</updated><id>http://localhost:4000/lecture/2017/06/15/lecture-webtech</id><content type="html" xml:base="http://localhost:4000/lecture/2017/06/15/lecture-webtech.html">&lt;p&gt;This project is about common technologies used to build (part) of web information systems.
The project course is given for students
at Lübeck University of Applied Sciences (in german language).
The course covers following aspects:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;descriptional languages&lt;/strong&gt; for web content like &lt;a href=&quot;http://www.w3.org/html/&quot;&gt;HTML&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;presentational languages&lt;/strong&gt; for web content like &lt;a href=&quot;http://www.w3.org/Style/CSS/&quot;&gt;CSS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Document Object Model&lt;/strong&gt; (DOM)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;client and server side programming&lt;/strong&gt; with &lt;a href=&quot;https://www.dartlang.org&quot;&gt;Dart&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;security aspects&lt;/strong&gt; like &lt;em&gt;HTML injections&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Students apply their intensified web programming skills by developing
a small one person, DOM-tree based (that means not canvas based)
online game like &lt;em&gt;Tetris&lt;/em&gt; or &lt;em&gt;Boulder Dash&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;course-material-german-only&quot;&gt;Course Material (german only)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;HTML Unit: &lt;a href=&quot;/assets/ss2017/webtech/webtech-html-css.pdf&quot;&gt;HTML and CSS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Dart Unit: &lt;a href=&quot;/assets/ss2017/webtech/webtech-dart-i.pdf&quot;&gt;Part 1&lt;/a&gt;, &lt;a href=&quot;/assets/ss2017/webtech/webtech-dart-ii.pdf&quot;&gt;Part 2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;REST and HTTP Unit: &lt;a href=&quot;/assets/ss2017/webtech/webtech-http-rest.pdf&quot;&gt;REST&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;An exemplary reference game: &lt;a href=&quot;https://github.com/nkratzke/dartsnake&quot;&gt;SnakeDart&lt;/a&gt; (another game has to be developped using Dart)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;game-outcomes&quot;&gt;Game outcomes&lt;/h2&gt;

&lt;p&gt;20 Teams started this project. These teams plan to finish the following announced games. Playable game outcomes will be linked here. So, stay tuned.&lt;/p&gt;

&lt;p&gt;Be aware, this semester mobile games have to be implemented. So, some of the following games may be only working in mobile devices (due to necessarry 3D orientation or geolocation capabilities). However, most of the announced games should be playable on desktop browsers as well.&lt;/p&gt;

&lt;h3 id=&quot;group-a&quot;&gt;Group A&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Team 1: &lt;a href=&quot;/assets/ss2017/webtech/games/team-01-ctb/web/start.html&quot;&gt;Catch the Ballz&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Team 2: &lt;a href=&quot;/assets/ss2017/webtech/games/team-02-running-man/web/index.html&quot;&gt;Running Man&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Team 3: &lt;a href=&quot;/assets/ss2017/webtech/games/team-03-tetris/web/index.html&quot;&gt;Tetris&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Team 4: &lt;a href=&quot;/assets/ss2017/webtech/games/team-04-dynamite-man/web/index.html&quot;&gt;Dynamite Man&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Team 5: &lt;a href=&quot;/assets/ss2017/webtech/games/team-05-schfel-space/web/index.html&quot;&gt;SchFel Space (Invader)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;group-b&quot;&gt;Group B&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Team 6: &lt;a href=&quot;/assets/ss2017/webtech/games/team-06-star-speeder/web/index.html&quot;&gt;Star Speeder&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Team 7: &lt;a href=&quot;/assets/ss2017/webtech/games/team-07-ninja-swap/web/index.html&quot;&gt;Ninja Swap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Team 8: &lt;a href=&quot;/assets/ss2017/webtech/games/team-08-tower-defence/web/index.html&quot;&gt;Tower Defence&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Team 9: &lt;a href=&quot;/assets/ss2017/webtech/games/team-09-simdart/web/index.html&quot;&gt;Simdart&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Team 10: &lt;a href=&quot;/assets/ss2017/webtech/games/team-10-sudoku/web/index.html&quot;&gt;Sudoku&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;group-c&quot;&gt;Group C&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Team 11: &lt;a href=&quot;/assets/ss2017/webtech/games/team-11-drops/web/index.html&quot;&gt;Drops&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Team 12: &lt;a href=&quot;/assets/ss2017/webtech/games/team-12-conway-wars/web/index.html&quot;&gt;Conway Wars&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Team 13: Space Combat Game &lt;strong&gt;(team surrendered)&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Team 14: A.R.S.S. [Another Random Space Shooter] &lt;strong&gt;(team surrendered)&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Team 15: &lt;a href=&quot;/assets/ss2017/webtech/games/team-15-breakout/web/index.html&quot;&gt;Break Out&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Team 16: &lt;a href=&quot;/assets/ss2017/webtech/games/team-16-flappydart/web/index.html&quot;&gt;Flappy Dart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;group-d&quot;&gt;Group D&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Team 17: &lt;a href=&quot;/assets/ss2017/webtech/games/team-17-tombrunner/web/index.html&quot;&gt;TOMB Runner&lt;/a&gt; &lt;em&gt;sadly, this game has a severe bug … :-(&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Team 18: &lt;a href=&quot;/assets/ss2017/webtech/games/team-18-frogger/web/index.html&quot;&gt;Frogger&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Team 19: &lt;a href=&quot;/assets/ss2017/webtech/games/team-19-memory/web/index.html&quot;&gt;Memory&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Team 20: &lt;a href=&quot;/assets/ss2017/webtech/games/team-20-dartfall/web/index.html&quot;&gt;Dartfall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Nane Kratzke</name></author><category term="web" /><category term="lecture" /><category term="database" /><category term="html" /><category term="css" /><category term="dart" /><category term="programming" /><category term="rest" /><category term="http" /><summary type="html"></summary></entry><entry><title type="html">Smuggling Multi-Cloud Support into Cloud-native Applications using Elastic Container Platforms</title><link href="http://localhost:4000/2017/04/28/closer2017.html" rel="alternate" type="text/html" title="Smuggling Multi-Cloud Support into Cloud-native Applications using Elastic Container Platforms" /><published>2017-04-28T00:00:00+02:00</published><updated>2017-04-28T00:00:00+02:00</updated><id>http://localhost:4000/2017/04/28/closer2017</id><content type="html" xml:base="http://localhost:4000/2017/04/28/closer2017.html">&lt;p&gt;How to transfer elastic container platforms like Docker Swarm, Kubernetes across different cloud service providers like AWS, GCE, Azure, OpenStack &lt;strong&gt;at runtime&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;I presented a proof-of-concept solution (accepted as an full paper) to do this on the &lt;a href=&quot;http://closer.scitevents.org/?y=2017&quot;&gt;7th International Conference on Cloud Computing and Services Science&lt;/a&gt; (CLOSER 2017) in Porto, Portugal.&lt;/p&gt;

&lt;p&gt;Currently the proof-of-concept system supports the following infrastructures and elastic platforms.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Infrastructures: AWS (using Ruby aws-sdk), GCE (using CLI interface), Azure (using fog.io), OpenStack (using fog.io)&lt;/li&gt;
  &lt;li&gt;Platforms: Kubernetes (1.6 and above), Docker Swarm (1.12 and above)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, due to its extendable design arbitrary cloud infrastructures (IaaS) and elastic container platforms can be supported by providing addtional drivers.&lt;/p&gt;

&lt;p&gt;A full text version of the paper is provided via &lt;span class=&quot;researchgate&quot;&gt;&lt;a href=&quot;https://www.researchgate.net/publication/313860386&quot;&gt;Research&lt;em&gt;Gate&lt;/em&gt;&lt;/a&gt;&lt;/span&gt;.
Informations how to cite the paper can be found &lt;a href=&quot;/bibliography/Kra2017a.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The conference presentation slides are embedded in this post. However, they can be accessed directly via &lt;a href=&quot;slideshare&quot;&gt;SlideShare&lt;/a&gt; as well.&lt;/p&gt;

&lt;h3 id=&quot;abstract&quot;&gt;Abstract&lt;/h3&gt;

&lt;p&gt;Elastic container platforms (like Kubernetes, Docker Swarm, Apache Mesos) fit very well with existing cloud-native application architecture approaches. So it is more than astonishing, that these already existing and open source available elastic platforms are not considered more consequently in multi-cloud research. Elastic container platforms provide inherent multi-cloud support that can be easily accessed. We present a solution proposal of a control process which is able to scale (and migrate as a side effect) elastic container platforms across different public and private cloud-service providers. This control loop can be used in an execution phase of self-adaptive auto-scaling MAPE loops (monitoring, analysis, planning, execution). Additionally, we present several lessons learned from our prototype implementation which might be of general interest for researchers and practitioners. For instance, to describe only the intended state of an elastic platform and let a single control process take care to reach this intended state is far less complex than to define plenty of specific and necessary multi-cloud aware workflows to deploy, migrate, terminate, scale up and scale down elastic platforms or applications.&lt;/p&gt;

&lt;h3 id=&quot;slides&quot;&gt;Slides&lt;/h3&gt;

&lt;center&gt;
&lt;iframe src=&quot;http://www.slideshare.net/slideshow/embed_code/key/HLaB6fZ30TIuwt&quot; width=&quot;100%&quot; height=&quot;500px&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border: 1px solid white; max-width: 100%; background-color: white;&quot;&gt;&lt;/iframe&gt;
&lt;/center&gt;

&lt;h3 id=&quot;proof-of-concept-implementation&quot;&gt;Proof-of-Concept Implementation&lt;/h3&gt;

&lt;p&gt;The proof-of-concept implementation can be found in the following &lt;a href=&quot;https://bitbucket.org/nanekratzke/plain&quot;&gt;bitbucket&lt;/a&gt; repository. You will find the last progress in the &lt;strong&gt;working&lt;/strong&gt; branch.&lt;/p&gt;</content><author><name>Nane Kratzke</name></author><category term="blog" /><category term="paper" /><category term="cloud" /><category term="research" /><category term="cloudtransit" /><category term="container" /><category term="ecp" /><category term="kubernetes" /><category term="swarm" /><category term="docker" /><summary type="html"></summary></entry><entry><title type="html">Cloud-native Apps</title><link href="http://localhost:4000/2017/04/12/cloud-com-interview.html" rel="alternate" type="text/html" title="Cloud-native Apps" /><published>2017-04-12T00:00:00+02:00</published><updated>2017-04-12T00:00:00+02:00</updated><id>http://localhost:4000/2017/04/12/cloud-com-interview</id><content type="html" xml:base="http://localhost:4000/2017/04/12/cloud-com-interview.html">&lt;h2 id=&quot;80-der-cloud-dienste-sind-nicht-standardisiert&quot;&gt;80% der Cloud-Dienste sind nicht standardisiert&lt;/h2&gt;

&lt;p&gt;Dank vieler Vorzüge erlebt Cloud-native einen Hype. Das Konzept hat aber auch Nachteile. Wer zur Entwicklung Cloud-nativer Applikationen Dienste eines Cloud-Anbieters einsetzt, spart viel Arbeit, begibt sich aber auch in Abhängigkeiten. Wie lässt sich das Risiko eines Vendor Lock-Ins minimieren?&lt;/p&gt;

&lt;p&gt;Mehr dazu in folgendem Interview (auch als &lt;a href=&quot;/assets/self-archive/com-interview.pdf&quot;&gt;PDF&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/com-interview.jpg&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;</content><author><name>Nane Kratzke</name></author><category term="blog" /><category term="cloud" /><category term="container" /><category term="docker" /><category term="kubernetes" /><summary type="html">80% der Cloud-Dienste sind nicht standardisiert</summary></entry><entry><title type="html">Eine spielerische Einführung in das Computational Thinking</title><link href="http://localhost:4000/thesis/2017/02/21/thesis-learn-to-prog.html" rel="alternate" type="text/html" title="Eine spielerische Einführung in das Computational Thinking" /><published>2017-02-21T00:00:00+01:00</published><updated>2017-02-21T00:00:00+01:00</updated><id>http://localhost:4000/thesis/2017/02/21/thesis-learn-to-prog</id><content type="html" xml:base="http://localhost:4000/thesis/2017/02/21/thesis-learn-to-prog.html">&lt;p&gt;Kinder kommen - wenn überhaupt -	frühestens im Grundschulalter mit
Programmierung in Kontakt. Ansätze das Computational Thinking systematisch zu vermitteln
liegen häufig noch in den Kinderschuhen. Webapplikationen	wie	z.B.	&lt;a href=&quot;https://lightbot.com/flash.html&quot;&gt;lightbot&lt;/a&gt; 
ermöglichen zwar einen spielerischen Zugang,	indem ein
Roboter durch eine Sequenz von Anweisungen Schritt	für	Schritt	
an ein	Ziel	geführt werden kann. Allerdings	wird	nur begrenzt	darauf	eingegangen,	
welche weitergehenden Konzepte Programmiersprachen	haben.&lt;/p&gt;

&lt;p&gt;Mit dieser Bachelorarbeit soll eine Webapplikationen in Anlehnung an das
Eingangs erwähnte Lightbot-Spiel entwickelt werden. Diese Webapplikation soll dabei weniger auf eine
3D Darstellung wert legen, sondern ergänzend
zur sequentiellen Ausführung von Einzelanweisungen zusätzliche 
Konzepte imperativer Programmiersprachen spielerisch nutzen:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Variablen zur Speicherung von Zuständen&lt;/li&gt;
  &lt;li&gt;Schleifen mit Bedingungen&lt;/li&gt;
  &lt;li&gt;Funktionen mit Parametern und Rückgabewerten&lt;/li&gt;
  &lt;li&gt;ggf. Collection-artige Datenstrukturen wie Listen, Queues, Stacks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kindern	soll mit	Hilfe	einer graphischen	Darstellung	und Erklärung
der	Konzepte	geholfen	werden	diese zu verstehen und zur Lösung von
Problemen spielerisch anzuwenden.	Die genannten Konzepten	sollen hierzu mittels	
verschiedener	Level und steigendem Schwierigkeitsgrad	schrittweise und 
spielerisch eingeführt werden.&lt;/p&gt;

&lt;p&gt;Die Applikation soll als Stand-alone Webapplikation (Single Page App)
für Desktop- und Tablet-Browser mittels eines etablierten Responsive Web Frameworks
konzipiert werden, die ohne eine zentrale Server-Komponente auskommt und daher
flexibel in Schulen auf Laptops/Desktops oder Tablets eingesetzt werden kann. 
Die Wahl der Implementierungssprache obliegt dem Autor der Arbeit ist jedoch zu begründen. 
Die Übertragbarkeit des Spielkonzepts auf Smartphones ist grundsätzlich konzeptionell zu berücksichtigen.&lt;/p&gt;

&lt;h2 id=&quot;aufgaben-dokumentation-und-outcomes&quot;&gt;Aufgaben, Dokumentation und Outcomes&lt;/h2&gt;

&lt;p&gt;Im einzelnen sind die folgenden Aufgaben zu bearbeiten:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Analysieren&lt;/strong&gt; der oben genannten Anforderungen und Randbedingungen sowie Formulierung verfeinerter funktionaler und nicht-funktionaler &lt;strong&gt;Requirements&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Entwicklung und Abstimmung mit dem Aufgabensteller eines Lösungskonzepts (Architektur)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Implementieren&lt;/strong&gt; des Spiels.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Test und Nachweis&lt;/strong&gt; des Spiels inkl. Evaluierung des Spielkonzepts für die Zielgruppe.&lt;/li&gt;
  &lt;li&gt;Begleitende &lt;strong&gt;Dokumentation&lt;/strong&gt; der oben angegebenen Schritte. Zur Dokumentation der Ergebnisse kann folgendes &lt;a href=&quot;https://github.com/nkratzke/BAMA-Template&quot;&gt;Template&lt;/a&gt; genutzt werden.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Nane Kratzke</name></author><category term="thesis" /><category term="programming" /><category term="web" /><summary type="html">Kinder kommen - wenn überhaupt - frühestens im Grundschulalter mit Programmierung in Kontakt. Ansätze das Computational Thinking systematisch zu vermitteln liegen häufig noch in den Kinderschuhen. Webapplikationen wie z.B. lightbot ermöglichen zwar einen spielerischen Zugang, indem ein Roboter durch eine Sequenz von Anweisungen Schritt für Schritt an ein Ziel geführt werden kann. Allerdings wird nur begrenzt darauf eingegangen, welche weitergehenden Konzepte Programmiersprachen haben.</summary></entry><entry><title type="html">#BTW17 - The German Bundestag Elections of 2017 on Twitter</title><link href="http://localhost:4000/research/project/2017/02/01/project-btw17.html" rel="alternate" type="text/html" title="#BTW17 - The German Bundestag Elections of 2017 on Twitter" /><published>2017-02-01T00:00:00+01:00</published><updated>2017-02-01T00:00:00+01:00</updated><id>http://localhost:4000/research/project/2017/02/01/project-btw17</id><content type="html" xml:base="http://localhost:4000/research/project/2017/02/01/project-btw17.html">&lt;h2 id=&quot;research-setting&quot;&gt;Research setting&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Project duration: 1st Feb. 2017 - 28th Feb. 2018&lt;/li&gt;
  &lt;li&gt;Involved researchers: Nane Kratzke&lt;/li&gt;
  &lt;li&gt;Funding: Lübeck University of Applied Sciences internal Project&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;research-context&quot;&gt;Research context&lt;/h2&gt;

&lt;p&gt;Data-driven political campaigns can be successful. &lt;em&gt;“The Obama 2012 campaign used data analytics and the experimental method to assemble a winning coalition vote by vote. In doing so, it overturned the long dominance of TV advertising in U.S. politics and created something new in the world: a national campaign run like a local ward election, where the interests of individual voters were known and addressed.”&lt;/em&gt; &lt;a href=&quot;https://www.technologyreview.com/s/509026/how-obamas-team-used-big-data-to-rally-voters/&quot;&gt;Technology Review&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But four years later, &lt;a href=&quot;https://www.washingtonpost.com/news/post-politics/wp/2016/11/09/clintons-data-driven-campaign-relied-heavily-on-an-algorithm-named-ada-what-didnt-she-see/?utm_term=.0d42b30d02c7&quot;&gt;Hillary Clinton’s data-driven campaign&lt;/a&gt; organized by the same party failed under the eyes of the world. The question is why data-driven campaigns worked for Barack Obama but not for Hillary Clinton? There is an interesting &lt;a href=&quot;http://www.politico.com/magazine/story/2017/02/data-driven-campaigns-democrats-need-message-214759&quot;&gt;article&lt;/a&gt;
proclaiming that ‘data-driven’ campaigns are killing the US Democratic Party, because the wrong lessons from Obama’s success have been learned. Dave Gold states that &lt;em&gt;“Democrats have allowed microtargeting to become microthinking. Each cycle, we speak to fewer and fewer people and have less and less to say”&lt;/em&gt; although adressing the right audience. So, whether this is true or not can not be answered by this paper. However, it should be obvious for the reader that data collected acompanying such election campaigns might contain worthful insights.&lt;/p&gt;

&lt;p&gt;Especially Twitter analysis of US election campaigns are done for a while. However, there exist only &lt;a href=&quot;http://journals.sagepub.com/doi/10.1177/0894439314558836&quot;&gt;some open accessible Twitter datasets&lt;/a&gt; with a clear focus on political election campaigns in countries of the European Union. That is why this project records Twitter interactions for one further European country (Germany).&lt;/p&gt;

&lt;p&gt;One major motivation to record this dataset is to collect Twitter data in the “hot” (pre-)phase of political election campaigns in Germany. Social media channels are used more or more intensively by all political parties to distribute political messages and it is more than likely that the professionality – or the data-driveness – will increase in the future. So, this dataset might be one of the latest recordable datasets without being affected by too much microtargeting effects in political campaigning in Germany. Therefore, it might be used for future studies analyzing the campaigns for the 19th German Bundestag but also as a reference dataset to measure ‘data-driven’ effects of political campaigns and microtargeting on Twitter in future campaigns.&lt;/p&gt;

&lt;h2 id=&quot;research-objectives&quot;&gt;Research objectives&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Record&lt;/strong&gt; a representative dataset of Twitter interactions during to pre- and hot-phase for the 19th German Bundestag elections.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Provide&lt;/strong&gt; this dataset via an Open Data platform like &lt;a href=&quot;https://zenodo.org/&quot;&gt;Zenodo&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Develop&lt;/strong&gt; or contribute to pragmatic software tools that enable to record Twitter datasets over long period of times.&lt;/li&gt;
  &lt;li&gt;Perform a &lt;strong&gt;network analysis&lt;/strong&gt; of the recorded dataset regarding political parties in Germany.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Publish&lt;/strong&gt; analysis results in Open Access scholary contribution channels.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;research-outcomes&quot;&gt;Research outcomes&lt;/h2&gt;

&lt;p&gt;Software (SW), Datasets (DS), Presentations (PR)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SW: &lt;a href=&quot;https://github.com/nkratzke/twista&quot;&gt;Twista&lt;/a&gt; is a Twitter streaming and analysis command line tool.&lt;/li&gt;
  &lt;li&gt;DS: &lt;a href=&quot;https://zenodo.org/record/835735&quot;&gt;BTW17 dataset&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;PR: &lt;a href=&quot;https://www.slideshare.net/i21aneka/der-bundestagswahlkampf-2017-auf-twitter-war-der-ausgang-abzusehen&quot;&gt;Der Bundestagswahlkampf 2017 auf Twitter - War der Ausgang abzusehen?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;publications&quot;&gt;Publications&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;strong&gt;[Kra2017b]&lt;/strong&gt; &lt;span id=&quot;Kra2017b&quot;&gt;Kratzke, N. (2017). The #BTW17 Twitter Dataset - Recorded Tweets of the Federal Election Campaigns of 2017 for the 19th German Bundestag. &lt;i&gt;Data&lt;/i&gt;, &lt;i&gt;2&lt;/i&gt;(4).&lt;/span&gt;

&lt;span class=&quot;researchgate&quot;&gt;
	&lt;a href=&quot;https://www.researchgate.net/publication/320555485&quot;&gt;Research&lt;em&gt;Gate&lt;/em&gt;&lt;/a&gt;
&lt;/span&gt;

&lt;a class=&quot;details&quot; href=&quot;/bibliography/Kra2017b.html&quot;&gt;more&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</content><author><name>Nane Kratzke</name></author><category term="social" /><category term="media" /><category term="Twitter" /><category term="research" /><category term="project" /><category term="BTW17" /><category term="data-science" /><summary type="html">Research setting</summary></entry></feed>